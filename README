acts_as_tree_with_dotted_ids
============================

This is an extension to Rails good old acts_as_tree which uses an extra "dotted_ids" column 
which stores the path of the node as string of ID joined by dots, hence the name.

This optimization solves performance issues related to in-database tree structure by allowing 
for O(1) ancestor/child verification and O(N) subtree access.

The plugin adds the following instance methods:

* ancestor_of?(node)
* self_and_ancestors
* descendant_of?(node)
* all_children

The following methods of have been rewritten to take advantage of the dotted IDs:

* root
* ancestors
* siblings
* self_and_sibbings


From the original acts_as_tree README:

* ancestor_of?(node)
* descendant_of?(node)
* all_children

Specify this +acts_as+ extension if you want to model a tree structure by providing a parent association and a children
association. This requires that you have a foreign key column, which by default is called +parent_id+.

  class Category < ActiveRecord::Base
    acts_as_tree_with_dotted_ids :order => "name"
  end

  Example:
  root
   \_ child1
        \_ subchild1
        \_ subchild2

  root      = Category.create("name" => "root")
  child1    = root.children.create("name" => "child1")
  subchild1 = child1.children.create("name" => "subchild1")

  root.parent   # => nil
  child1.parent # => root
  root.children # => [child1]
  root.children.first.children.first # => subchild1

Copyright (c) 2007 David Heinemeier Hansson, released under the MIT license
Copyright (c) 2008 Xavier Defrang, released under the MIT license